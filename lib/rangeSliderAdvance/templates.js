"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// panels templates: slider (bar and controls), hitogram and settings
exports.SLIDER_TEMPLATE = "\n<div rv-focus-exempt class=\"rv-rangeslider\">\n    <div class=\"toggle-control\"></div>\n    <div class=\"slider-content\">\n        <div class=\"slider-bar\">\n            <div id=\"nouislider\" class=\"slider-widget\"></div>\n            <div class=\"slider-controls\"></div>\n        </div>\n    </div>\n</div>";
exports.SETTINGS_PANEL_TEMPLATE = "\n<div class=\"slider-settings\">\n    <div class=\"slider-global\"></div>\n    <div class=\"slider-layers\"></div>\n</div>";
exports.HISTO_PANEL_TEMPLATE = "\n<div class=\"slider-histo\">\n    <div id=\"histo\">HISTOGRAM</div>\n</div>";
// toggle controls to show/hide settings and histogram panels
exports.TOGGLE_SETTINGS_TEMPLATE = "\n<div class=\"slider-control\">\n    <md-button\n        ng-controller=\"ToggleSettingCtrl as ctrl\"\n        aria-label=\"{{ 'plugins.rangeSlider.settings' | translate }}\"\n        class=\"md-icon-button primary\"\n        ng-click=\"ctrl.toggleSettings()\">\n        <md-tooltip>{{ 'plugins.rangeSlider.settings' | translate }}</md-tooltip>\n        <md-icon md-svg-src=\"maps:layers\"></md-icon>\n    </md-button>\n</div>";
exports.TOGGLE_HISTO_TEMPLATE = "\n<div class=\"slider-control\">\n    <md-button\n        ng-controller=\"ToggleHistoCtrl as ctrl\"\n        aria-label=\"{{ 'plugins.rangeSlider.histo' | translate }}\"\n        class=\"md-icon-button primary\"\n        ng-click=\"ctrl.toggleHisto()\">\n        <md-tooltip>{{ 'plugins.rangeSlider.histo' | translate }}</md-tooltip>\n        <md-icon>" + createSVG('histo') + "</md-icon>\n    </md-button>\n</div>";
// slider bar controls (lock, previous, next, play/pause, refresh, delay, export gif)
exports.LOCK_BAR_TEMPLATE = "\n<div class=\"slider-bar-control slider-lock-control\">\n    <md-button\n        ng-controller=\"LockSliderCtrl as ctrl\"\n        ng-if=\"ctrl.a.isLocked === true\"\n        aria-label=\"{{ 'plugins.rangeSlider.bar.lock' | translate }}\"\n        class=\"md-icon-button primary\"\n        ng-click=\"ctrl.lock()\">\n        <md-tooltip>{{ 'plugins.rangeSlider.bar.lock' | translate }}</md-tooltip>\n        <md-icon>" + createSVG('lock') + "</md-icon>\n    </md-button>\n    <md-button\n        ng-controller=\"LockSliderCtrl as ctrl\"\n        ng-if=\"!ctrl.a.isLocked\"\n        aria-label=\"{{ 'plugins.rangeSlider.bar.unlock' | translate }}\"\n        class=\"md-icon-button primary\"\n        ng-click=\"ctrl.lock()\">\n        <md-tooltip>{{ 'plugins.rangeSlider.bar.unlock' | translate }}</md-tooltip>\n        <md-icon>" + createSVG('lockOpen') + "</md-icon>\n    </md-button>\n</div>";
exports.PREVIOUS_BAR_TEMPLATE = "\n<div class=\"slider-bar-control\">\n    <md-button\n        ng-controller=\"StepSliderCtrl as ctrl\"\n        aria-label=\"{{ 'plugins.rangeSlider.bar.previous' | translate }}\"\n        class=\"md-icon-button primary\"\n        ng-click=\"ctrl.step('down')\">\n        <md-tooltip>{{ 'plugins.rangeSlider.bar.previous' | translate }}</md-tooltip>\n        <md-icon>" + createSVG('previous') + "</md-icon>\n    </md-button>\n</div>";
exports.NEXT_BAR_TEMPLATE = "\n<div class=\"slider-bar-control\">\n    <md-button\n        ng-controller=\"StepSliderCtrl as ctrl\"\n        aria-label=\"{{ 'plugins.rangeSlider.bar.foward' | translate }}\"\n        class=\"md-icon-button primary\"\n        ng-click=\"ctrl.step('up')\">\n        <md-tooltip>{{ 'plugins.rangeSlider.bar.foward' | translate }}</md-tooltip>\n        <md-icon>" + createSVG('next') + "</md-icon>\n    </md-button>\n</div>";
exports.PLAY_BAR_TEMPLATE = "\n<div class=\"slider-bar-control\">\n    <md-button\n        ng-controller=\"PlaySliderCtrl as ctrl\"\n        ng-if=\"self.isPlaying\"\n        aria-label=\"{{ 'plugins.rangeSlider.bar.play' | translate }}\"\n        class=\"md-icon-button primary\"\n        ng-click=\"ctrl.pause()\">\n        <md-tooltip>{{ 'plugins.rangeSlider.bar.play' | translate }}</md-tooltip>\n        <md-icon>" + createSVG('play') + "</md-icon>\n    </md-button>\n    <md-button\n        ng-controller=\"PlaySliderCtrl as ctrl\"\n        ng-if=\"!self.isPlaying\"\n        aria-label=\"{{ 'plugins.rangeSlider.bar.pause' | translate }}\"\n        class=\"md-icon-button primary\"\n        ng-click=\"ctrl.play()\">\n        <md-tooltip>{{ 'plugins.rangeSlider.bar.pause' | translate }}</md-tooltip>\n        <md-icon>" + createSVG('pause') + "</md-icon>\n    </md-button>\n</div>";
exports.REFRESH_BAR_TEMPLATE = "\n<div class=\"slider-bar-control slider-refresh-control\">\n    <md-button\n        ng-controller=\"RefreshSliderCtrl as ctrl\"\n        aria-label=\"{{ 'plugins.rangeSlider.bar.refresh' | translate }}\"\n        class=\"md-icon-button primary rv-slider-refresh\"\n        ng-click=\"ctrl.refresh()\">\n        <md-tooltip>{{ 'plugins.rangeSlider.bar.refresh' | translate }}</md-tooltip>\n        <md-icon>" + createSVG('refresh') + "</md-icon>\n    </md-button>\n</div>";
exports.DELAY_BAR_TEMPLATE = "\n<div ng-controller=\"DelaySliderCtrl as ctrl\" class=\"slider-bar-control\">\n    <md-input-container class=\"md-block\" md-no-float flex>\n        <label>{{ 'plugins.rangeSlider.bar.delay' | translate }}</label>\n        <md-select\n            aria-label=\"{{ 'plugins.rangeSlider.bar.delay' | translate }}\"\n            ng-model=\"ctrl.selectedDelay\"\n            ng-change=\"ctrl.selectDelay()\">\n            <md-option ng-repeat=\"(key, value) in { 3000: '3 sec', 5000: '5 sec', 7000: '7 sec' }\" ng-value=\"{{ key }}\" ng-selected=\"{{ key }} === 5000\">\n                {{ value }}\n            </md-option>\n        </md-select>\n    </md-input-container>\n</div>";
exports.EXPORT_BAR_TEMPLATE = "\n<div class=\"slider-bar-control\">\n    <md-switch\n        ng-controller=\"ExportSliderCtrl as ctrl\"\n        aria-label=\"{{ 'plugins.rangeSlider.histo' | translate }}\"\n        class=\"rv-slider-switch\"\n        ng-class=\"md-primary\"\n        ng-model=\"ctrl.export\">\n        {{ 'plugins.rangeSlider.histo' | translate }}\n        <md-tooltip>{{ 'plugins.rangeSlider.histo' | translate }}</md-tooltip>\n    </md-switchn>\n</div>";
function createSVG(icon) {
    var svg = {
        'histo': '<path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z"></path>',
        'lock': '<path d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"></path>',
        'lockOpen': '<path d="M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z"></path>',
        'next': '<path d="M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z"></path>',
        'previous': '<path d="M6 6h2v12H6zm3.5 6l8.5 6V6z"></path>',
        'play': '<path d="M8 5v14l11-7z"></path>',
        'pause': '<path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"></path>',
        'refresh': '<path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"></path>'
    };
    return "<svg xmlns=\"http://www.w3.org/2000/svg\" fit=\"\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\" focusable=\"false\">\n            <g id=\"slider" + icon + "\">" + svg[icon] + "</g></svg>";
}
// slider settings controls (type, interval, limit)
exports.INTERVAL_TEMPLATE = "\n<div ng-controller=\"IntervalCtrl as ctrl\">\n    <md-input-container class=\"md-block\" md-no-float flex>\n        <label>{{ 'plugins.rangeSlider.histo' | translate }}</label>\n        <md-select\n            aria-label=\"{{ 'plugins.rangeSlider.histo' | translate }}\" translate\n            ng-model=\"ctrl.activeLayer.interval\"\n            md-on-close=\"ctrl.updateInterval()\">\n            <md-option ng-repeat=\"t in ctrl.intervals\" ng-value=\"{{ t }}\" ng-selected=\"{{ t }} === 10\">\n                {{ t }}\n            </md-option>\n        </md-select>\n    </md-input-container>\n</div>";
exports.LIMITS_TEMPLATE = createControl('limit');
// layers settings controls (layers, fields, range )
exports.LAYERS_LIST_TEMPLATE = "\n<div ng-controller=\"LayersListCtrl as ctrl\" class=\"slider-item-name\">\n    <md-input-container class=\"md-block\" md-no-float flex>\n        <label>{{ 'slider.settings.layer' | translate }}</label>\n        <md-select\n            aria-label=\"{{ 'slider.settings.layer' | translate }}\" translate\n            ng-model=\"self.selectedLayerId\"\n            ng-change=\"self.updateLayer()\">\n            <md-option ng-repeat=\"(key, value) in self.sliderService.layersName\" ng-value=\"key\" ng-selected=\"$index === 0\">\n                    {{ value }}\n            </md-option>\n        </md-select>\n    </md-input-container>\n</div>";
exports.LAYERS_FIELDS_TEMPLATE = "\n<div ng-controller=\"LayersFieldsCtrl as ctrl\" class=\"slider-item-filter\">\n    <md-input-container class=\"md-block\" md-no-float flex>\n        <label>{{ 'slider.settings.field' | translate }}</label>\n        <md-select\n            aria-label=\"{{ 'slider.settings.field' | translate }}\" translate\n            ng-model=\"self.activeLayer.slider.field\"\n            md-on-close=\"self.updateAttribute()\">\n            <md-option ng-repeat=\"(key, value) in self.activeLayer.slider.fields\" ng-value=\"key\">\n                    {{ value }}\n            </md-option>\n        </md-select>\n    </md-input-container>\n</div>";
exports.LAYERS_RANGE_TEMPLATE = createControl('range');
function createControl(type) {
    return "<div ng-controller=\"" + type.charAt(0).toUpperCase() + type.slice(1) + "Ctrl as ctrl\">\n                <div ng-if=\"ctrl.selectedType === 'number'\">\n                    <md-input-container>\n                        <input type=\"number\" md-no-asterisk=\"true\"\n                            aria-label=\"{{ 'slider.settings." + type + "min' | translate }}\" translate\n                            ng-pattern=\"/d/\"\n                            step=\"any\"\n                            placeholder=\"{{ 'slider.settings." + type + "min' | translate }}\"\n                            ng-model=\"ctrl.activeLayer.slider." + type + ".number.min\"\n                            ng-model-options=\"{ debounce: { default: 750, blur: 0 } }\"\n                            ng-change=\"ctrl.update" + type + "()\">\n                    </md-input-container>\n                    <md-input-container>\n                        <input type=\"number\" md-no-asterisk=\"true\"\n                            aria-label=\"{{ 'slider.settings.limitmax' | translate }}\" translate\n                            ng-pattern=\"/d/\"\n                            step=\"any\"\n                            placeholder=\"{{ 'slider.settings.limitmax' | translate }}\"\n                            ng-model=\"ctrl.activeLayer.slider." + type + ".number.max\"\n                            ng-model-options=\"{ debounce: { default: 750, blur: 0 } }\"\n                            ng-change=\"ctrl.update" + type + "()\">\n                    </md-input-container>\n                </div>\n                <div ng-if=\"ctrl.selectedType === 'date'\">\n                    <md-input-container>\n                        <label>{{ 'slider.settings." + type + "min' | translate }}</label>\n                        <md-datepicker\n                            ng-click=\"ctrl.prevent($event)\"\n                            ng-change=\"ctrl.update" + type + "()\"\n                            ng-model=\"ctrl.activeLayer.slider." + type + ".date.min\"\n                            md-placeholder=\"{{ 'slider.settings." + type + "min' | translate }}\">\n                    </md-datepicker>\n                    </md-input-container>\n                    <md-input-container>\n                        <label>{{ 'slider.settings." + type + "max' | translate }}</label>\n                        <md-datepicker\n                            ng-click=\"ctrl.prevent($event)\"\n                            ng-change=\"ctrl.update" + type + "()\"\n                            ng-model=\"ctrl.activeLayer.slider." + type + ".date.max\"\n                            md-placeholder=\"{{ 'slider.settings." + type + "max' | translate }}\">\n                        </md-datepicker>\n                    </md-input-container>\n                </div>\n            </div>";
}
;
exports.SETTING_TEMPLATEZZZ = "\n<div ng-show=\"self.sliderService.isSettingOpen\">\n    <div class=\"rv-slider-limits\" style=\"display:flex\">\n\n            <div ng-if=\"self.selectedType === 'number'\">\n                <md-input-container>\n                    <input type=\"number\" md-no-asterisk=\"true\"\n                        aria-label=\"{{ 'slider.settings.limitmin' | translate }}\" translate\n                        ng-pattern=\"/d/\"\n                        step=\"any\"\n                        placeholder=\"{{ 'slider.settings.limitmin' | translate }}\"\n                        ng-model=\"self.activeLayer.slider.limits.number.min\"\n                        ng-model-options=\"{ debounce: { default: 750, blur: 0 } }\"\n                        ng-change=\"self.updateLimits()\">\n                 </md-input-container>\n                <md-input-container>\n                    <input type=\"number\" md-no-asterisk=\"true\"\n                        aria-label=\"{{ 'slider.settings.limitmax' | translate }}\" translate\n                        ng-pattern=\"/d/\"\n                        step=\"any\"\n                        placeholder=\"{{ 'slider.settings.limitmax' | translate }}\"\n                        ng-model=\"self.activeLayer.slider.limits.number.max\"\n                        ng-model-options=\"{ debounce: { default: 750, blur: 0 } }\"\n                        ng-change=\"self.updateLimits()\">\n                </md-input-container>\n            </div>\n            <div ng-if=\"self.selectedType === 'date'\">\n                <md-input-container>\n                    <label>{{ 'slider.settings.limitmin' | translate }}</label>\n                    <md-datepicker\n                        ng-click=\"self.prevent($event)\"\n                        ng-change=\"self.updateLimits()\"\n                        ng-model=\"self.activeLayer.slider.limits.date.min\"\n                        md-placeholder=\"{{ 'slider.settings.limitmin' | translate }}\">\n                </md-datepicker>\n                </md-input-container>\n                <md-input-container>\n                    <label>{{ 'slider.settings.limitmax' | translate }}</label>\n                    <md-datepicker\n                        ng-click=\"self.prevent($event)\"\n                        ng-change=\"self.updateLimits()\"\n                        ng-model=\"self.activeLayer.slider.limits.date.max\"\n                        md-placeholder=\"{{ 'slider.settings.limitmax' | translate }}\">\n                    </md-datepicker>\n                </md-input-container>\n            </div>\n    </div>\n    <md-divider></md-divider>\n    <ul class=\"rv-list rv-slider-list\">\n        <li class=\"rv-slider-list-item\">\n\n            <div ng-if=\"self.selectedType === 'number'\">\n                <md-input-container>\n                    <input type=\"number\" md-no-asterisk=\"true\"\n                        aria-label=\"{{ 'slider.settings.rangemin' | translate }}\" translate\n                        ng-pattern=\"/d/\"\n                        step=\"any\"\n                        placeholder=\"{{ 'slider.settings.rangemin' | translate }}\"\n                        ng-model=\"self.activeLayer.slider.ranges.number.min\"\n                        ng-model-options=\"{ debounce: { default: 750, blur: 0 } }\"\n                        ng-change=\"self.updateRange()\">\n                </md-input-container>\n                <md-input-container>\n                    <input type=\"number\" md-no-asterisk=\"true\"\n                        aria-label=\"{{ 'slider.settings.rangemax' | translate }}\" translate\n                        ng-pattern=\"/d/\"\n                        step=\"any\"\n                        placeholder=\"{{ 'slider.settings.rangemax' | translate }}\"\n                        ng-model=\"self.activeLayer.slider.ranges.number.max\"\n                        ng-model-options=\"{ debounce: { default: 750, blur: 0 } }\"\n                        ng-change=\"self.updateRange()\">\n                </md-input-container>\n            </div>\n            <div ng-if=\"self.selectedType === 'date'\">\n                <md-input-container>\n                    <label>{{ 'slider.settings.rangemin' | translate }}</label>\n                    <md-datepicker\n                        ng-click=\"self.prevent($event)\"\n                        ng-change=\"self.updateRange()\"\n                        ng-model=\"self.activeLayer.slider.ranges.date.min\"\n                        md-placeholder=\"{{ 'slider.settings.rangemin' | translate }\">\n                    </md-datepicker>\n                </md-input-container>\n                <md-input-container>\n                    <label>{{ 'slider.settings.rangemax' | translate }}</label>\n                    <md-datepicker\n                        ng-click=\"self.prevent($event)\"\n                        ng-change=\"self.updateRange()\"\n                        ng-model=\"self.activeLayer.slider.ranges.date.max\"\n                        md-placeholder=\"{{ 'slider.settings.rangemax' | translate }}\">\n                    </md-datepicker>\n                </md-input-container>\n            </div>\n            <md-input-container>\n                <label>{{ 'slider.settings.selected' | translate }}</label>\n                <input type=\"string\" readonly\n                    aria-label=\"{{ 'slider.settings.selected' | translate }}\" translate\n                    value=\"{{ self.activeLayer.slider.selectCount }} - {{ self.activeLayer.slider.percentCount }}%\">\n                </input>\n            </md-input-container>\n        </li>\n    </ul>\n    <md-divider></md-divider>\n</div>\n";
